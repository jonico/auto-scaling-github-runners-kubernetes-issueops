name: "Approve self-hosted runner scale set creation/update request"
on:
  issue_comment:
    types: [created]

jobs:
  prechecks:
    name: "Check pre-conditions for self hosted runner scale set creation/update"
    if: github.event.issue.pull_request != null && startsWith(github.event.issue.title, 'Create or edit self hosted runner scale set for env ') && startsWith(github.event.comment.body, '/approve')
    runs-on: self-hosted
    outputs:
      environment: ${{ steps.prechecks.outputs.environment }}
      cloud: ${{ steps.prechecks.outputs.cloud }}
    steps:
    - name: Debug
      uses: actions/github-script@v3
      with:
        script: console.log(JSON.stringify(context, null, 2));

    - name: Parse issue body
      id: issue_body
      uses: peter-murray/issue-body-parser-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        issue_id: ${{ github.event.issue.number }}

    - name: Check permissions and scan environment
      id: prechecks
      uses: actions/github-script@v3
      env:
        title: ${{ github.event.issue.title }}
        comment: ${{ github.event.issue.body }}
        ISSUE_PAYLOAD: ${{ steps.issue_body.outputs.payload }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const issuePayload = JSON.parse(process.env.ISSUE_PAYLOAD);

          const runner = {
            environment: issuePayload.environment,
            cloud: issuePayload.cloud,
          };

          if (! /^[a-zA-Z0-9_]+$/.test(runner.environment)) {
            const error = `The name of the environment contains illegal characters: ${runner.environment}`;
            core.error(error);
            core.setFailed(error);
          }

          if (! /^[a-zA-Z0-9_]+$/.test(runner.cloud)) {
            const error = `The name of the cloud contains illegal characters: ${runner.cloud}`;
            core.error(error);
            core.setFailed(error);
          }

          core.info("environment: " + runner.environment)
          core.info("cloud: " + runner.cloud)

          const permissionRes = await github.repos.getCollaboratorPermissionLevel(
            {
              ...context.repo,
              username: context.actor
            }
          )
          if (permissionRes.status !== 200) {
            message = 'Permission check returns non-200 status: ${permissionRes.status}'
            core.setOutput('error', message)
            throw new Error(message)
          }
          const actorPermission = permissionRes.data.permission
          if (!['admin', 'write'].includes(actorPermission)) {
              message = 'ðŸ‘‹  @' + context.actor + ', seems as if you have not admin/write permission to /approve this PR, permissions: ${actorPermission}'
              core.setOutput('error', message)
              throw new Error(message)
          }
          core.setOutput('environment', runner.environment)
          core.setOutput('cloud', runner.cloud)

    - name: Pre-Check-Failed
      id: precheck-failed
      if: failure()
      uses: actions/github-script@v3
      env:
        message: ${{steps.prechecks.outputs.error}}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { message } = process.env;
          github.issues.createComment({
            ...context.repo,
            issue_number: context.issue.number,
            body: message
          })

  act-on-provisioning-request:
    name: "Provision self hosted runner scale set"
    needs: [prechecks]
    runs-on: ${{needs.prechecks.outputs.cloud}}
    steps:

      - name: Acknowledge self hosted runner provisioning request
        id: acknowledge
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const log_url = `${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID}`
            const { environment } = process.env;
            pr = await github.pulls.get(
              {
                ...context.repo,
                pull_number: context.issue.number
              }
            )

            if (pr.status !== 200) {
              message = 'Could not retrieve PR info: ${permissionRes.status}'
              core.setOutput('error', message)
              throw new Error(message)
            }

            if (!pr.data.mergeable) {
              message = 'This PR is currently not mergeable, please update it with the latest changes from the target branch.'
              core.setOutput('error', message)
              throw new Error(message)
            }

            github.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: 'ðŸ‘‹  @' + context.actor + ' provisioning self hosted runner scale set environment ' + environment + ' now, you can watch the progress [here](' + log_url + ') ...'
            })

            core.setOutput('ref', pr.data.head.ref)
        env:
          environment: ${{needs.prechecks.outputs.environment}}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.acknowledge.outputs.ref }}

      - name: Set up Cloud SDK
        id: setup-cloud-sdk-gcp
        if: needs.prechecks.outputs.cloud == 'gcp'
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - id: get-credentials-gcp
        if: needs.prechecks.outputs.cloud == 'gcp'
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: ${{secrets.CLUSTER_NAME}}
          location: ${{secrets.CLUSTER_LOCATION}}

      - id: install-tools-gcp
        if: needs.prechecks.outputs.cloud == 'gcp'
        name: "Install kubectl and kustomize"
        run: |
          gcloud components install kubectl kustomize

      - id: install-kube-tools
        if: needs.prechecks.outputs.cloud == 'aws'
        name: "Install kube-tools"
        uses: yokawasa/action-setup-kube-tools@v0.3.0
        with:
          kubectl: '1.17.1'
          kustomize: '3.7.0'

      - id: install-aws-cli
        if: needs.prechecks.outputs.cloud == 'aws'
        name: "Install aws cli"
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - id: get-credentials-aws
        if: needs.prechecks.outputs.cloud == 'aws'
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.CLUSTER_LOCATION}}
          

      - name: Apply changes and generate sample workflow
        id: apply-changes
        env:
          environment: ${{needs.prechecks.outputs.environment}}
          cloud: ${{needs.prechecks.outputs.cloud}}
          CLUSTER_NAME: ${{secrets.CLUSTER_NAME}}
          REGION: ${{secrets.CLUSTER_LOCATION}}
        run: |
          if [ $cloud == "raspi" ]
          then
            export KUBECONFIG=$HOME/kubeconfig
          fi

          if [ $cloud == "aws" ]
          then
            aws eks --region $REGION update-kubeconfig --name $CLUSTER_NAME  
          fi

          IFS=";" SAMPLE_WORKFLOW=$(cat actions-runner-envs/${environment}/test-auto-scaling-workflow.yml)
          SAMPLE_WORKFLOW="${SAMPLE_WORKFLOW//'%'/'%25'}"
          SAMPLE_WORKFLOW="${SAMPLE_WORKFLOW//$'\n'/'%0A'}"
          SAMPLE_WORKFLOW="${SAMPLE_WORKFLOW//$'\r'/'%0D'}"
          echo "::set-output name=sample-workflow::$SAMPLE_WORKFLOW"

          kustomize build actions-runner-envs/${environment} > ${environment}.yaml
          IFS=";" CONFIG_APPLIED=$(cat ${environment}.yaml)
          echo "Going to apply the following Kubernetes configuration: "
          echo $CONFIG_APPLIED
          kubectl apply -f ${environment}.yaml
          CONFIG_APPLIED="${CONFIG_APPLIED//'%'/'%25'}"
          CONFIG_APPLIED="${CONFIG_APPLIED//$'\n'/'%0A'}"
          CONFIG_APPLIED="${CONFIG_APPLIED//$'\r'/'%0D'}"
          echo "::set-output name=config-applied::$CONFIG_APPLIED"

      - name: Provisioning Failed
        id: provisioning-failed
        if: failure()
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const log_url = `${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID}`

            github.issues.createComment({
              ...context.repo,
              issue_number: ${{ github.event.issue.number }},
              body: `Self-hosted runner provision request failed :cry:. [View error logs](${ log_url}).`
            })

      - name: Provisioning Succeeded
        id: provisioning-succeeded
        if: success()
        uses: actions/github-script@v3
        env:
          CONFIG_APPLIED: ${{ steps.apply-changes.outputs.config-applied }}
          SAMPLE_WORKFLOW: ${{ steps.apply-changes.outputs.sample-workflow }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commentBody = `\
            ### :computer: Self-hosted runner configuration applied successfully :runner:

            <details>
            <summary>ðŸš€ Configuration applied</summary>

            \`\`\`
            ${process.env.CONFIG_APPLIED}
            \`\`\`
            </details>

            <details>
            <summary>:octocat: Auto-scaling test workflow (paste into .github/workflows directory of target repo)</summary>

            \`\`\`
            ${process.env.SAMPLE_WORKFLOW}
            \`\`\`
            </details>

            Merging this PR now ...

            After merging, you can also copy the GitHub Action sample workflow from [here](../blob/master/actions-runner-envs/${{needs.prechecks.outputs.environment}}/test-auto-scaling-workflow.yml).
            To change or delete the runner scale set configuration, open another issue, or reopen the last issue with a modified description.
            `;

            await github.issues.createComment({
              ...context.repo,
              issue_number: ${{ github.event.issue.number }},
              body: commentBody
            })

            github.pulls.merge({
              ...context.repo,
              pull_number: context.issue.number
            });
